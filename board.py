import numpy as np
from math import *
import decimal
# a = [
# [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],
# [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],
# [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],
# [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],
# [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],
# [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],
# [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],
# [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],
# [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],
# [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],
# [[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],
#      ]
rot_board = [[[0.0, 7.071], [0.707, 6.364], [1.414, 5.657], [2.121, 4.95], [2.828, 4.243], [3.536, 3.536], [4.243, 2.828], [4.95, 2.121], [5.657, 1.414], [6.364, 0.707], [7.071, 0.0]], [[0.707, 7.778], [1.414, 7.071], [2.121, 6.364], [2.828, 5.657], [3.536, 4.95], [4.243, 4.243], [4.95, 3.536], [5.657, 2.828], [6.364, 2.121], [7.071, 1.414], [7.778, 0.707]], [[1.414, 8.485], [2.121, 7.778], [2.828, 7.071], [3.536, 6.364], [4.243, 5.657], [4.95, 4.95], [5.657, 4.243], [6.364, 3.536], [7.071, 2.828], [7.778, 2.121], [8.485, 1.414]], [[2.121, 9.192], [2.828, 8.485], [3.536, 7.778], [4.243, 7.071], [4.95, 6.364], [5.657, 5.657], [6.364, 4.95], [7.071, 4.243], [7.778, 3.536], [8.485, 2.828], [9.192, 2.121]], [[2.828, 9.899], [3.536, 9.192], [4.243, 8.485], [4.95, 7.778], [5.657, 7.071], [6.364, 6.364], [7.071, 5.657], [7.778, 4.95], [8.485, 4.243], [9.192, 3.536], [9.899, 2.828]], [[3.536, 10.607], [4.243, 9.899], [4.95, 9.192], [5.657, 8.485], [6.364, 7.778], [7.071, 7.071], [7.778, 6.364], [8.485, 5.657], [9.192, 4.95], [9.899, 4.243], [10.607, 3.536]], [[4.243, 11.314], [4.95, 10.607], [5.657, 9.899], [6.364, 9.192], [7.071, 8.485], [7.778, 7.778], [8.485, 7.071], [9.192, 6.364], [9.899, 5.657], [10.607, 4.95], [11.314, 4.243]], [[4.95, 12.021], [5.657, 11.314], [6.364, 10.607], [7.071, 9.899], [7.778, 9.192], [8.485, 8.485], [9.192, 7.778], [9.899, 7.071], [10.607, 6.364], [11.314, 5.657], [12.021, 4.95]], [[5.657, 12.728], [6.364, 12.021], [7.071, 11.314], [7.778, 10.607], [8.485, 9.899], [9.192, 9.192], [9.899, 8.485], [10.607, 7.778], [11.314, 7.071], [12.021, 6.364], [12.728, 5.657]], [[6.364, 13.435], [7.071, 12.728], [7.778, 12.021], [8.485, 11.314], [9.192, 10.607], [9.899, 9.899], [10.607, 9.192], [11.314, 8.485], [12.021, 7.778], [12.728, 7.071], [13.435, 6.364]], [[7.071, 14.142], [7.778, 13.435], [8.485, 12.728], [9.192, 12.021], [9.899, 11.314], [10.607, 10.607], [11.314, 9.899], [12.021, 9.192], [12.728, 8.485], [13.435, 7.778], [14.142, 7.071]]]
rot_mat = np.array([[cos(radians(45)), -sin(radians(45))],[sin(radians(45)),cos(radians(45))]])

a = np.zeros([11,11,2], dtype=np.float32)
for row in range(11):
    for column in range(11):
        a[row][column][0] = column
        a[row][column][1] = row
        rot_coord = np.matmul(a[row][column],rot_mat)
        a[row][column][0] = rot_coord[0]
        a[row][column][1] = rot_coord[1] + 7.07107

board_list = a.tolist()
for row in range(11):
    for column in range(11):
        board_list[row][column][0] = round(board_list[row][column][0],3)
        board_list[row][column][1] = round(board_list[row][column][1],3)


b = [
[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0],
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0]]

c = [
[0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0],
[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

d = [
[0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0],
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0],
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0],
[0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0]]

e = [
[0, 0, 1, 1, 1, 0, 2, 2, 2, 2, 2],
[0, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2],
[1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2],
[1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2],
[1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2],
[1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2],
[1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2],
[1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2],
[1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2],
[0, 1, 1, 1, 1, 0, 2, 2, 2, 2, 2],
[0, 0, 1, 1, 1, 0, 2, 2, 2, 2, 2]]


z = [
[1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9],
[1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
[5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
[6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
[7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],
[8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 17],
[9, 10, 11, 12, 13, 14, 15, 16, 17, 17, 17]]

def flip(setup):
    for i in range(11):
        for j in range(6,11):
            temp = setup[i][j]
            setup[i][j]= setup[i][10-j]
            setup[i][10 - j] =temp
    return setup

for row in range(11):
    for column in range(11):
        temp = board_list[row][column]
        temp.append(e[row][column])

        board_list[row][column]= temp
#print(board_list)
def decimal_board(setup):
    for i in range(11):
        for j in range(11):
            setup[i][j] = setup[i][j]/10
    return setup
print(flip(z))

z = [[9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 1], [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1], [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2], [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3], [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4], [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5], [16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6], [17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7], [17, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8], [17, 17, 17, 16, 15, 14, 13, 12, 11, 10, 9]]


e = [
[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
[8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
[7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],
[6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
[5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
[0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]